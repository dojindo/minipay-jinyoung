plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	// id 'jacoco'
	 id "org.sonarqube" version "4.4.1.3373"
}

//jacocoTestReport {
//	dependsOn test
//
//	reports {
//		html.required = true
//		xml.required = true
//
//	}

//	def Qdomains = []
//	for (qPattern in '**/QA'..'**/QZ') { // qPattern = '**/QA', '**/QB', ... '*.QZ'
//		Qdomains.add(qPattern + '*')
//	}
//	afterEvaluate {
//		classDirectories.setFrom(
//				files(classDirectories.files.collect {
//					fileTree(dir: it, excludes: [
//							// 측정 안하고 싶은 패턴
//							"**/global/*",
//							"**/redis/*",
//							"**/*Application*",
//							"**/*Config*",
//							"**/*Dto*",
//							"**/*Request*",
//							"**/*Response*",
//							"**/*Interceptor*",
//							"**/*Exception*"
//							// Querydsl 관련 제거
//					] + Qdomains)
//				})
//		)
//	}
//}
//
//// sonarCloud
//sonar {
//	properties {
//		property "sonar.projectKey", "dojindo_minipay-jinyoung"
//		property "sonar.organization", "dojindo"
//		property 'sonar.host.url', 'https://sonarcloud.io'
//		property 'sonar.sources', 'src'
//		property 'sonar.language', 'java'
//		property 'sonar.sourceEncoding', 'UTF-8'
//		property 'sonar.test.inclusions', '**/*Test.java'
//		property 'sonar.exclusions', '**/test/**, **/Q*.java, **/*Doc*.java, **/resources/** ,**/*Application*.java , **/*Config*.java,' +
//				'**/*Dto*.java, **/*Request*.java, **/*Response*.java ,**/*Exception*.java ,**/*ErrorCode*.java'
//		property 'sonar.java.coveragePlugin', 'jacoco'
//		property 'sonar.java.binaries', "${buildDir}/classes"
//		property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco.xml"
//	}
//}

sonar {
	properties {
		property "sonar.projectKey", "dojindo_minipay-jinyoung"
		property "sonar.organization", "dojindo"
		property 'sonar.host.url', 'https://sonarcloud.io'
	}
}

group = 'com.jindo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	 // finalizedBy jacocoTestReport
}
